// seeds/runSeeds.js
const { Pool } = require('pg');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

const pool = new Pool({
  user: process.env.DB_USER,
  host: process.env.DB_HOST,
  database: process.env.DB_NAME,
  password: process.env.DB_PASSWORD,
  port: process.env.DB_PORT,
});

async function runSeeds() {
  try {
    console.log('üå± –ó–∞–ø—É—Å–∫ seed –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ß–∏—Ç–∞–µ–º SQL —Ñ–∞–π–ª
    const seedSQL = fs.readFileSync(path.join(__dirname, 'seedData.sql'), 'utf8');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º SQL
    await pool.query(seedSQL);
    
    console.log('‚úÖ Seed –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = await pool.query('SELECT COUNT(*) FROM locations');
    console.log(`üìç –î–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–∫–∞—Ü–∏–π: ${result.rows[0].count}`);
    
    const categoriesResult = await pool.query('SELECT COUNT(*) FROM categories');
    console.log(`üìÇ –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categoriesResult.rows[0].count}`);
    
    const tagsResult = await pool.query('SELECT COUNT(*) FROM tags');
    console.log(`üè∑Ô∏è –î–æ–±–∞–≤–ª–µ–Ω–æ —Ç–µ–≥–æ–≤: ${tagsResult.rows[0].count}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ seed –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await pool.end();
  }
}

runSeeds();
