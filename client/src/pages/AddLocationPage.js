// client/src/pages/AddLocationPage.js - –ü–û–õ–ù–ê–Ø –í–ï–†–°–ò–Ø –°–û –í–°–ï–ú–ò –§–ò–õ–¨–¢–†–ê–ú–ò
import React, { useState, useEffect } from 'react';
import { Container, Row, Col, Form, Button, Alert, Card, Spinner } from 'react-bootstrap';
import { useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import MapComponent from '../components/map/MapComponent';
import { createLocation } from '../redux/slices/locationSlice';
import api from '../services/api';

const AddLocationPage = () => {
  const [formData, setFormData] = useState({
    // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    name: '',
    description: '',
    category_id: '',
    coordinates: null,
    address: '',
    tags: '',
    
    // –ë–∞–∑–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    accessibility: '',
    best_time_of_day: '',
    difficulty_level: 1,
    
    // –î–û–ë–ê–í–õ–ï–ù–û: –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    photo_type: '',
    best_season: '',
    lighting_type: '',
    camera_angle: '',
    
    // –î–û–ë–ê–í–õ–ï–ù–û: –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    transport_type: '',
    cost_type: '',
    popularity_level: '',
    physical_preparation: '',
    
    // –î–û–ë–ê–í–õ–ï–ù–û: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    suitable_for: '',
    equipment_needed: '',
    parking_available: '',
    entrance_fee: ''
  });
  
  const [categories, setCategories] = useState([]);
  const [categoriesLoading, setCategoriesLoading] = useState(true);
  const [selectedLocation, setSelectedLocation] = useState(null);
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);
  const [validated, setValidated] = useState(false);

  const navigate = useNavigate();
  const dispatch = useDispatch();
  const { user } = useSelector(state => state.auth);
  const { creating, createError } = useSelector(state => state.locations);

  useEffect(() => {
    if (!user) {
      navigate('/login');
    }
  }, [user, navigate]);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  useEffect(() => {
    const fetchCategories = async () => {
      try {
        setCategoriesLoading(true);
        console.log('üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è...');
        
        const response = await api.get('/categories');
        
        if (response.data.success) {
          setCategories(response.data.categories);
          console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–ª—è —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', response.data.categories.length);
        } else {
          console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', response.data.message);
          setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
        }
      } catch (err) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', err);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏');
      } finally {
        setCategoriesLoading(false);
      }
    };
    
    fetchCategories();
  }, []);

  useEffect(() => {
    if (createError) {
      setError(createError);
      setLoading(false);
    }
  }, [createError]);

  const handleLocationSelect = (locationData) => {
    console.log('–í—ã–±—Ä–∞–Ω–∞ –ª–æ–∫–∞—Ü–∏—è:', locationData);
    
    setSelectedLocation(locationData);
    setFormData(prev => ({
      ...prev,
      coordinates: locationData.coordinates,
      address: locationData.address,
      name: prev.name || locationData.name
    }));
    
    setError('');
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: value
    }));
    
    if (error) {
      setError('');
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    e.stopPropagation();
    
    const form = e.currentTarget;
    setValidated(true);
    
    if (!formData.name.trim()) {
      setError('–ù–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ');
      return;
    }

    if (!formData.coordinates) {
      setError('–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é –Ω–∞ –∫–∞—Ä—Ç–µ');
      return;
    }

    if (form.checkValidity() === false) {
      return;
    }

    setLoading(true);
    setError('');

    try {
      const locationData = {
        name: formData.name.trim(),
        description: formData.description.trim() || '',
        coordinates: formData.coordinates,
        address: formData.address || `${formData.coordinates[0].toFixed(6)}, ${formData.coordinates[1].toFixed(6)}`,
        category_id: parseInt(formData.category_id) || 1,
        
        // –ë–∞–∑–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        best_time_of_day: formData.best_time_of_day || null,
        accessibility: formData.accessibility || null,
        difficulty_level: parseInt(formData.difficulty_level) || 1,
        tags: formData.tags || null,
        
        // –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        photo_type: formData.photo_type || null,
        best_season: formData.best_season || null,
        lighting_type: formData.lighting_type || null,
        camera_angle: formData.camera_angle || null,
        
        // –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        transport_type: formData.transport_type || null,
        cost_type: formData.cost_type || null,
        popularity_level: formData.popularity_level || null,
        physical_preparation: formData.physical_preparation || null,
        
        // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        suitable_for: formData.suitable_for || null,
        equipment_needed: formData.equipment_needed || null,
        parking_available: formData.parking_available || null,
        entrance_fee: formData.entrance_fee || null
      };

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏:', locationData);

      const result = await dispatch(createLocation(locationData));
      
      if (createLocation.fulfilled.match(result)) {
        console.log('‚úÖ –õ–æ–∫–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ:', result.payload);
        navigate('/locations');
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏:', result.error);
        setError(result.error?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–æ–∫–∞—Ü–∏–∏');
      }
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–∫–∞—Ü–∏–∏:', err);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ª–æ–∫–∞—Ü–∏–∏');
    } finally {
      setLoading(false);
    }
  };

  const isFormValid = formData.name.trim() && selectedLocation && selectedLocation.coordinates;

  return (
    <Container className="py-4">
      <Row className="justify-content-center">
        <Col md={10} lg={8}>
          <Card className="shadow">
            <Card.Header className="bg-primary text-white">
              <h2 className="mb-0">üìç –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –ª–æ–∫–∞—Ü–∏—é</h2>
            </Card.Header>
            <Card.Body>
              {error && (
                <Alert variant="danger" dismissible onClose={() => setError('')}>
                  <strong>–û—à–∏–±–∫–∞:</strong> {error}
                </Alert>
              )}

              <Form noValidate validated={validated} onSubmit={handleSubmit}>
                {/* –û–°–ù–û–í–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø */}
                <h5 className="text-primary mb-3">üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h5>
                <Row>
                  <Col md={6}>
                    <Form.Group className="mb-3">
                      <Form.Label>–ù–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ *</Form.Label>
                      <Form.Control
                        type="text"
                        name="name"
                        value={formData.name}
                        onChange={handleInputChange}
                        placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏"
                        required
                        isInvalid={validated && !formData.name.trim()}
                      />
                      <Form.Control.Feedback type="invalid">
                        –ù–∞–∑–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
                      </Form.Control.Feedback>
                    </Form.Group>
                  </Col>
                  
                  <Col md={6}>
                    <Form.Group className="mb-3">
                      <Form.Label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è *</Form.Label>
                      <Form.Select
                        name="category_id"
                        value={formData.category_id}
                        onChange={handleInputChange}
                        required
                        disabled={categoriesLoading}
                      >
                        <option value="">
                          {categoriesLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...' : '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'}
                        </option>
                        {categories.map(category => (
                          <option key={category.id} value={category.id}>
                            {category.icon} {category.name}
                          </option>
                        ))}
                      </Form.Select>
                    </Form.Group>
                  </Col>
                </Row>

                <Form.Group className="mb-3">
                  <Form.Label>–û–ø–∏—Å–∞–Ω–∏–µ</Form.Label>
                  <Form.Control
                    as="textarea"
                    rows={3}
                    name="description"
                    value={formData.description}
                    onChange={handleInputChange}
                    placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏..."
                  />
                </Form.Group>

                {/* –§–û–¢–û–ì–†–ê–§–ò–ß–ï–°–ö–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò */}
                <hr />
                <h5 className="text-primary mb-3">üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h5>
                <Row>
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üì∏ –¢–∏–ø —Å—ä–µ–º–∫–∏</Form.Label>
                      <Form.Select
                        name="photo_type"
                        value={formData.photo_type}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–æ–π —Ç–∏–ø</option>
                        <option value="–ø–æ—Ä—Ç—Ä–µ—Ç">–ü–æ—Ä—Ç—Ä–µ—Ç</option>
                        <option value="–ø–µ–π–∑–∞–∂">–ü–µ–π–∑–∞–∂</option>
                        <option value="–º–∞–∫—Ä–æ">–ú–∞–∫—Ä–æ</option>
                        <option value="–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞">–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞</option>
                        <option value="street">Street —Ñ–æ—Ç–æ</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üåÖ –õ—É—á—à–∏–π —Å–µ–∑–æ–Ω</Form.Label>
                      <Form.Select
                        name="best_season"
                        value={formData.best_season}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–æ–π —Å–µ–∑–æ–Ω</option>
                        <option value="–≤–µ—Å–Ω–∞">–í–µ—Å–Ω–∞</option>
                        <option value="–ª–µ—Ç–æ">–õ–µ—Ç–æ</option>
                        <option value="–æ—Å–µ–Ω—å">–û—Å–µ–Ω—å</option>
                        <option value="–∑–∏–º–∞">–ó–∏–º–∞</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>‚òÄÔ∏è –û—Å–≤–µ—â–µ–Ω–∏–µ</Form.Label>
                      <Form.Select
                        name="lighting_type"
                        value={formData.lighting_type}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ</option>
                        <option value="–∑–æ–ª–æ—Ç–æ–π_—á–∞—Å">–ó–æ–ª–æ—Ç–æ–π —á–∞—Å</option>
                        <option value="—Å–∏–Ω–∏–π_—á–∞—Å">–°–∏–Ω–∏–π —á–∞—Å</option>
                        <option value="–¥–Ω–µ–≤–Ω–æ–π_—Å–≤–µ—Ç">–î–Ω–µ–≤–Ω–æ–π —Å–≤–µ—Ç</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üìê –†–∞–∫—É—Ä—Å</Form.Label>
                      <Form.Select
                        name="camera_angle"
                        value={formData.camera_angle}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–æ–π —Ä–∞–∫—É—Ä—Å</option>
                        <option value="—Å–≤–µ—Ä—Ö—É">–°–≤–µ—Ä—Ö—É</option>
                        <option value="—Å–Ω–∏–∑—É">–°–Ω–∏–∑—É</option>
                        <option value="–Ω–∞_—É—Ä–æ–≤–Ω–µ_–≥–ª–∞–∑">–ù–∞ —É—Ä–æ–≤–Ω–µ –≥–ª–∞–∑</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                </Row>

                {/* –ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò */}
                <hr />
                <h5 className="text-success mb-3">üöó –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h5>
                <Row>
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üöó –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç</Form.Label>
                      <Form.Select
                        name="transport_type"
                        value={formData.transport_type}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–æ–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç</option>
                        <option value="–ø–µ—à–∫–æ–º">–ü–µ—à–∫–æ–º</option>
                        <option value="–Ω–∞_–º–∞—à–∏–Ω–µ">–ù–∞ –º–∞—à–∏–Ω–µ</option>
                        <option value="–æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π">–û–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å</Form.Label>
                      <Form.Select
                        name="cost_type"
                        value={formData.cost_type}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</option>
                        <option value="–±–µ—Å–ø–ª–∞—Ç–Ω–æ">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</option>
                        <option value="–ø–ª–∞—Ç–Ω–æ">–ü–ª–∞—Ç–Ω–æ</option>
                        <option value="—Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ">–¢—Ä–µ–±—É–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üë• –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å</Form.Label>
                      <Form.Select
                        name="popularity_level"
                        value={formData.popularity_level}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å</option>
                        <option value="—Å–∫—Ä—ã—Ç—ã–µ">–°–∫—Ä—ã—Ç—ã–µ –º–µ—Å—Ç–∞</option>
                        <option value="–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ</option>
                        <option value="—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ">–¢—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üèÉ –§–∏–∑–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞</Form.Label>
                      <Form.Select
                        name="physical_preparation"
                        value={formData.physical_preparation}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞</option>
                        <option value="–ª–µ–≥–∫–æ">–õ–µ–≥–∫–æ</option>
                        <option value="—Å—Ä–µ–¥–Ω–µ">–°—Ä–µ–¥–Ω–µ</option>
                        <option value="—Å–ª–æ–∂–Ω–æ">–°–ª–æ–∂–Ω–æ</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                </Row>

                {/* –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò */}
                <hr />
                <h5 className="text-warning mb-3">üì± –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h5>
                <Row>
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üì± –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è</Form.Label>
                      <Form.Select
                        name="suitable_for"
                        value={formData.suitable_for}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</option>
                        <option value="instagram">Instagram</option>
                        <option value="tiktok">TikTok</option>
                        <option value="–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—ä–µ–º–∫–∞</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üé• –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</Form.Label>
                      <Form.Select
                        name="equipment_needed"
                        value={formData.equipment_needed}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ</option>
                        <option value="—Ç–µ–ª–µ—Ñ–æ–Ω">–¢–µ–ª–µ—Ñ–æ–Ω</option>
                        <option value="—Ñ–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç">–§–æ—Ç–æ–∞–ø–ø–∞—Ä–∞—Ç</option>
                        <option value="–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ</option>
                        <option value="–¥—Ä–æ–Ω">–î—Ä–æ–Ω</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üÖøÔ∏è –ü–∞—Ä–∫–æ–≤–∫–∞</Form.Label>
                      <Form.Select
                        name="parking_available"
                        value={formData.parking_available}
                        onChange={handleInputChange}
                      >
                        <option value="">–ù–µ —É–∫–∞–∑–∞–Ω–æ</option>
                        <option value="–µ—Å—Ç—å">–ï—Å—Ç—å –ø–∞—Ä–∫–æ–≤–∫–∞</option>
                        <option value="–Ω–µ—Ç">–ù–µ—Ç –ø–∞—Ä–∫–æ–≤–∫–∏</option>
                        <option value="–ø–ª–∞—Ç–Ω–∞—è">–ü–ª–∞—Ç–Ω–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={3}>
                    <Form.Group className="mb-3">
                      <Form.Label>üí≥ –í—Ö–æ–¥–Ω–∞—è –ø–ª–∞—Ç–∞</Form.Label>
                      <Form.Control
                        type="text"
                        name="entrance_fee"
                        value={formData.entrance_fee}
                        onChange={handleInputChange}
                        placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 500 —Ä—É–±"
                      />
                    </Form.Group>
                  </Col>
                </Row>

                {/* –ë–ê–ó–û–í–´–ï –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò */}
                <hr />
                <h5 className="text-info mb-3">‚öôÔ∏è –ë–∞–∑–æ–≤—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h5>
                <Row>
                  <Col md={4}>
                    <Form.Group className="mb-3">
                      <Form.Label>‚ôø –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</Form.Label>
                      <Form.Select
                        name="accessibility"
                        value={formData.accessibility}
                        onChange={handleInputChange}
                      >
                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å</option>
                        <option value="–ª–µ–≥–∫–∞—è">–õ–µ–≥–∫–∞—è</option>
                        <option value="—Å—Ä–µ–¥–Ω—è—è">–°—Ä–µ–¥–Ω—è—è</option>
                        <option value="—Å–ª–æ–∂–Ω–∞—è">–°–ª–æ–∂–Ω–∞—è</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={4}>
                    <Form.Group className="mb-3">
                      <Form.Label>üïê –í—Ä–µ–º—è —Å—É—Ç–æ–∫</Form.Label>
                      <Form.Select
                        name="best_time_of_day"
                        value={formData.best_time_of_day}
                        onChange={handleInputChange}
                      >
                        <option value="">–õ—é–±–æ–µ –≤—Ä–µ–º—è</option>
                        <option value="—É—Ç—Ä–æ">–£—Ç—Ä–æ</option>
                        <option value="–¥–µ–Ω—å">–î–µ–Ω—å</option>
                        <option value="–≤–µ—á–µ—Ä">–í–µ—á–µ—Ä</option>
                        <option value="–Ω–æ—á—å">–ù–æ—á—å</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                  
                  <Col md={4}>
                    <Form.Group className="mb-3">
                      <Form.Label>‚ö° –°–ª–æ–∂–Ω–æ—Å—Ç—å: {formData.difficulty_level}</Form.Label>
                      <Form.Range
                        name="difficulty_level"
                        min={1}
                        max={5}
                        value={formData.difficulty_level}
                        onChange={handleInputChange}
                      />
                      <Form.Text className="text-muted">
                        1 - –û—á–µ–Ω—å –ª–µ–≥–∫–æ, 5 - –û—á–µ–Ω—å —Å–ª–æ–∂–Ω–æ
                      </Form.Text>
                    </Form.Group>
                  </Col>
                </Row>

                <Form.Group className="mb-3">
                  <Form.Label>üè∑Ô∏è –¢–µ–≥–∏</Form.Label>
                  <Form.Control
                    type="text"
                    name="tags"
                    value={formData.tags}
                    onChange={handleInputChange}
                    placeholder="–∑–∞–∫–∞—Ç, –ø—Ä–∏—Ä–æ–¥–∞, —Ä–µ–∫–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)"
                  />
                  <Form.Text className="text-muted">
                    –î–æ–±–∞–≤—å—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–∏—Å–∫–∞
                  </Form.Text>
                </Form.Group>

                {/* –ö–ê–†–¢–ê */}
                <hr />
                <Form.Group className="mb-4">
                  <Form.Label>üó∫Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é –Ω–∞ –∫–∞—Ä—Ç–µ *</Form.Label>
                  <div className="border rounded p-2" style={{ minHeight: '350px' }}>
                    <MapComponent
                      center={[55.751244, 37.618423]}
                      zoom={10}
                      height="320px"
                      onLocationSelect={handleLocationSelect}
                      selectedLocation={selectedLocation}
                      interactive={true}
                    />
                  </div>
                  {selectedLocation && (
                    <div className="mt-2">
                      <small className="text-success">
                        ‚úÖ –í—ã–±—Ä–∞–Ω–æ: {selectedLocation.address}
                      </small>
                    </div>
                  )}
                  {validated && !formData.coordinates && (
                    <div className="text-danger mt-1">
                      <small>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é –Ω–∞ –∫–∞—Ä—Ç–µ</small>
                    </div>
                  )}
                </Form.Group>

                <div className="d-flex gap-2 justify-content-end">
                  <Button
                    variant="secondary"
                    onClick={() => navigate('/locations')}
                    disabled={loading || creating}
                  >
                    –û—Ç–º–µ–Ω–∞
                  </Button>
                  <Button
                    variant="primary"
                    type="submit"
                    disabled={!isFormValid || loading || creating || categoriesLoading}
                    size="lg"
                  >
                    {(loading || creating) ? (
                      <>
                        <Spinner animation="border" size="sm" className="me-2" />
                        –°–æ–∑–¥–∞–Ω–∏–µ...
                      </>
                    ) : (
                      'üìç –°–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é'
                    )}
                  </Button>
                </div>
              </Form>
            </Card.Body>
          </Card>
        </Col>
      </Row>
    </Container>
  );
};

export default AddLocationPage;
