// routes/favoriteRoutes.js - –ü–û–õ–ù–ê–Ø –í–ï–†–°–ò–Ø –° –†–ê–°–®–ò–†–ï–ù–ù–û–ô –û–¢–õ–ê–î–ö–û–ô
const express = require('express');
const router = express.Router();
const { protect } = require('../middleware/auth');

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.get('/', protect, async (req, res) => {
  try {
    const { pool } = require('../db');
    const userId = req.user.id;
    
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId);
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - req.user –ø–æ–ª–Ω–æ—Å—Ç—å—é:', req.user);
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞:', new Date().toISOString());
    
    // –î–û–ë–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...');
    await pool.query('SELECT NOW()');
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    // –î–û–ë–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã favorites
    const tableCheck = await pool.query(`
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'public' 
        AND table_name = 'favorites'
      );
    `);
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –¢–∞–±–ª–∏—Ü–∞ favorites —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', tableCheck.rows[0].exists);
    
    // –î–û–ë–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ favorites
    const totalCount = await pool.query('SELECT COUNT(*) FROM favorites');
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ favorites:', totalCount.rows[0].count);
    
    // –î–û–ë–ê–í–õ–ï–ù–û: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–∏—Å–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userFavoritesCount = await pool.query('SELECT COUNT(*) FROM favorites WHERE user_id = $1', [userId]);
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –ó–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', userId, ':', userFavoritesCount.rows[0].count);
    
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π SQL –∑–∞–ø—Ä–æ—Å...');
    
    const result = await pool.query(`
      SELECT 
        f.id as favorite_id,
        f.created_at as favorited_at,
        l.id, l.name, l.description, l.address,
        ST_X(l.coordinates) as longitude,
        ST_Y(l.coordinates) as latitude,
        l.category_id, l.created_at,
        c.name as category_name,
        c.icon as category_icon
      FROM favorites f
      JOIN locations l ON f.location_id = l.id
      LEFT JOIN categories c ON l.category_id = c.id
      WHERE f.user_id = $1
      ORDER BY f.created_at DESC
    `, [userId]);
    
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - SQL –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –ù–∞–π–¥–µ–Ω–æ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π:', result.rows.length);
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –î–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', result.rows);
    
    res.json({
      success: true,
      favorites: result.rows
    });
  } catch (error) {
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - –¢–∏–ø –æ—à–∏–±–∫–∏:', error.name);
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏:', error.message);
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - Stack trace:', error.stack);
    
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ' + error.message,
      favorites: []
    });
  }
});

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ª–æ–∫–∞—Ü–∏–∏
router.get('/check/:locationId', protect, async (req, res) => {
  try {
    const { pool } = require('../db');
    const { locationId } = req.params;
    const userId = req.user.id;
    
    console.log('üîç –û–¢–õ–ê–î–ö–ê - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', { locationId, userId });
    console.log('üîç –û–¢–õ–ê–î–ö–ê - –¢–∏–ø locationId:', typeof locationId);
    console.log('üîç –û–¢–õ–ê–î–ö–ê - –¢–∏–ø userId:', typeof userId);
    
    const result = await pool.query(`
      SELECT id FROM favorites 
      WHERE user_id = $1 AND location_id = $2
    `, [userId, locationId]);
    
    const isFavorite = result.rows.length > 0;
    
    console.log('üîç –û–¢–õ–ê–î–ö–ê - SQL —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result.rows);
    console.log('üîç –û–¢–õ–ê–î–ö–ê - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', isFavorite);
    
    res.json({
      success: true,
      isFavorite: isFavorite
    });
  } catch (error) {
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ' + error.message,
      isFavorite: false
    });
  }
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
router.post('/', protect, async (req, res) => {
  try {
    const { pool } = require('../db');
    const { location_id } = req.body;
    const userId = req.user.id;
    
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', { location_id, userId });
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - req.body –ø–æ–ª–Ω–æ—Å—Ç—å—é:', req.body);
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –¢–∏–ø location_id:', typeof location_id);
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –¢–∏–ø userId:', typeof userId);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ª–æ–∫–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏...');
    const locationCheck = await pool.query(
      'SELECT id, name FROM locations WHERE id = $1', 
      [location_id]
    );
    
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–∫–∞—Ü–∏–∏:', locationCheck.rows);
    
    if (locationCheck.rows.length === 0) {
      console.log('‚ùå –û–¢–õ–ê–î–ö–ê - –õ–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return res.status(404).json({
        success: false,
        message: '–õ–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      });
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—â–µ –Ω–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ...');
    const existingFavorite = await pool.query(
      'SELECT id FROM favorites WHERE user_id = $1 AND location_id = $2',
      [userId, location_id]
    );
    
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è:', existingFavorite.rows);
    
    if (existingFavorite.rows.length > 0) {
      console.log('‚ö†Ô∏è –û–¢–õ–ê–î–ö–ê - –õ–æ–∫–∞—Ü–∏—è —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º');
      return res.status(400).json({
        success: false,
        message: '–õ–æ–∫–∞—Ü–∏—è —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º'
      });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    console.log('üíñ –û–¢–õ–ê–î–ö–ê - –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ...');
    const result = await pool.query(`
      INSERT INTO favorites (user_id, location_id, created_at)
      VALUES ($1, $2, CURRENT_TIMESTAMP)
      RETURNING id, created_at
    `, [userId, location_id]);
    
    console.log('‚úÖ –û–¢–õ–ê–î–ö–ê - –õ–æ–∫–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', result.rows[0]);
    
    res.status(201).json({
      success: true,
      message: '–õ–æ–∫–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',
      favorite: result.rows[0]
    });
  } catch (error) {
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ:', error);
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - –ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code);
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - Stack trace:', error.stack);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ (—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ)
    if (error.code === '23505') {
      console.log('‚ö†Ô∏è –û–¢–õ–ê–î–ö–ê - –û—à–∏–±–∫–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è (23505)');
      return res.status(400).json({
        success: false,
        message: '–õ–æ–∫–∞—Ü–∏—è —É–∂–µ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º'
      });
    }
    
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ: ' + error.message
    });
  }
});

// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
router.delete('/:locationId', protect, async (req, res) => {
  try {
    const { pool } = require('../db');
    const { locationId } = req.params;
    const userId = req.user.id;
    
    console.log('üóëÔ∏è –û–¢–õ–ê–î–ö–ê - –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', { locationId, userId });
    console.log('üóëÔ∏è –û–¢–õ–ê–î–ö–ê - –¢–∏–ø locationId:', typeof locationId);
    console.log('üóëÔ∏è –û–¢–õ–ê–î–ö–ê - –¢–∏–ø userId:', typeof userId);
    
    const result = await pool.query(`
      DELETE FROM favorites 
      WHERE user_id = $1 AND location_id = $2
      RETURNING id
    `, [userId, locationId]);
    
    console.log('üóëÔ∏è –û–¢–õ–ê–î–ö–ê - –†–µ–∑—É–ª—å—Ç–∞—Ç —É–¥–∞–ª–µ–Ω–∏—è:', result.rows);
    
    if (result.rows.length === 0) {
      console.log('‚ùå –û–¢–õ–ê–î–ö–ê - –õ–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º');
      return res.status(404).json({
        success: false,
        message: '–õ–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–º'
      });
    }
    
    console.log('‚úÖ –û–¢–õ–ê–î–ö–ê - –õ–æ–∫–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
    
    res.json({
      success: true,
      message: '–õ–æ–∫–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ'
    });
  } catch (error) {
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ:', error);
    console.error('‚ùå –û–¢–õ–ê–î–ö–ê - Stack trace:', error.stack);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ' + error.message
    });
  }
});

module.exports = router;
