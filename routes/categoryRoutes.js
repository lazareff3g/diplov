// routes/categoryRoutes.js - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø –° –ü–†–Ø–ú–û–ô –†–ï–ê–õ–ò–ó–ê–¶–ò–ï–ô
const express = require('express');
const router = express.Router();

// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
router.get('/', async (req, res) => {
  try {
    const { pool } = require('../db');
    
    console.log('üìÇ –ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π...');
    
    const result = await pool.query(`
      SELECT id, name, description, icon
      FROM categories
      ORDER BY id ASC
    `);
    
    console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', result.rows.length);
    
    res.json({
      success: true,
      categories: result.rows
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', error);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π',
      error: error.message
    });
  }
});

// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ ID
router.get('/:id', async (req, res) => {
  try {
    const { id } = req.params;
    const { pool } = require('../db');
    
    console.log('üìÇ –ó–∞–ø—Ä–æ—Å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å ID:', id);
    
    const result = await pool.query(`
      SELECT id, name, description, icon
      FROM categories
      WHERE id = $1
    `, [id]);
    
    if (result.rows.length === 0) {
      return res.status(404).json({
        success: false,
        message: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'
      });
    }
    
    console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–∞:', result.rows[0]);
    
    res.json({
      success: true,
      category: result.rows[0]
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', error);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
      error: error.message
    });
  }
});

module.exports = router;
