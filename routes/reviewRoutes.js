// routes/reviewRoutes.js - –†–ê–ë–û–ß–ê–Ø –í–ï–†–°–ò–Ø
const express = require('express');
const router = express.Router();
const { protect } = require('../middleware/auth');

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏
router.get('/location/:locationId', async (req, res) => {
  try {
    const { locationId } = req.params;
    console.log('üìù –ó–∞–ø—Ä–æ—Å –æ—Ç–∑—ã–≤–æ–≤ –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏:', locationId);
    
    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ (–∑–∞–≥–ª—É—à–∫–∞)
    res.json({
      success: true,
      reviews: [],
      averageRating: 0
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤:', error);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤'
    });
  }
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞
router.post('/', protect, async (req, res) => {
  try {
    const { location_id, rating, comment } = req.body;
    const userId = req.user.id;
    
    console.log('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–∞:', { location_id, rating, comment, userId });
    
    // –ü–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç (–∑–∞–≥–ª—É—à–∫–∞)
    res.status(201).json({
      success: true,
      message: '–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω',
      review: {
        id: Date.now(),
        location_id,
        user_id: userId,
        rating,
        comment,
        created_at: new Date().toISOString()
      }
    });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞:', error);
    res.status(500).json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–∞'
    });
  }
});

module.exports = router;
